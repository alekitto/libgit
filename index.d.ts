/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface FetchOptions {
  remote?: string
  prune?: boolean
  credentialsCallback?: (url: string, username?: string) => Credentials
  skipCertificateCheck?: boolean
}
export const enum ReferenceType {
  Direct = 1,
  Symbolic = 2
}
export const enum RepositoryState {
  Clean = 0,
  Merge = 1,
  Revert = 2,
  RevertSequence = 3,
  CherryPick = 4,
  CherryPickSequence = 5,
  Bisect = 6,
  Rebase = 7,
  RebaseInteractive = 8,
  RebaseMerge = 9,
  ApplyMailbox = 10,
  ApplyMailboxOrRebase = 11
}
export function sum(a: number, b: number): number
export class Repository {
  static init(path: string, bare?: boolean | undefined | null): Repository
  static open(path: string): Repository
  static clone(url: string, path: string, recursive?: boolean | undefined | null): Repository
  namespace(): string | null
  isBare(): boolean
  isEmpty(): boolean
  path(): string
  state(): RepositoryState
  fetch(options?: FetchOptions | undefined | null): void
  getReference(reference: string): Reference
  getReferenceNames(referenceType?: ReferenceType | undefined | null): Array<string>
}
export class Credentials {
  static default(): Credentials
  static usernameAndPassword(username: string, password: string): Credentials
}
export class Reference { }
export class Oid { }
